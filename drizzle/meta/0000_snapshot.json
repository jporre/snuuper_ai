{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.spatial_ref_sys": {
      "name": "spatial_ref_sys",
      "schema": "",
      "columns": {
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "auth_name": {
          "name": "auth_name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "auth_srid": {
          "name": "auth_srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srtext": {
          "name": "srtext",
          "type": "varchar(2048)",
          "primaryKey": false,
          "notNull": false
        },
        "proj4text": {
          "name": "proj4text",
          "type": "varchar(2048)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "spatial_ref_sys_srid_check": {
          "name": "spatial_ref_sys_srid_check",
          "value": "(srid > 0) AND (srid <= 998999)"
        }
      }
    },
    "public.user_session": {
      "name": "user_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.test": {
      "name": "test",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.auth_user": {
      "name": "auth_user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "varchar(90)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(120)",
          "primaryKey": false,
          "notNull": true
        },
        "nombre": {
          "name": "nombre",
          "type": "varchar(250)",
          "primaryKey": false,
          "notNull": true
        },
        "fono": {
          "name": "fono",
          "type": "varchar(120)",
          "primaryKey": false,
          "notNull": false
        },
        "password_hash": {
          "name": "password_hash",
          "type": "varchar(120)",
          "primaryKey": false,
          "notNull": false
        },
        "activo": {
          "name": "activo",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "otros": {
          "name": "otros",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "foto": {
          "name": "foto",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "dob": {
          "name": "dob",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "idn": {
          "name": "idn",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "id_largo": {
          "name": "id_largo",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "uuid_generate_v4()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "auth_user_unique_mail": {
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false,
          "name": "auth_user_unique_mail"
        }
      },
      "checkConstraints": {}
    },
    "public.oauth_account": {
      "name": "oauth_account",
      "schema": "",
      "columns": {
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_user_id": {
          "name": "provider_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "oauth_account_user_id_fkey": {
          "name": "oauth_account_user_id_fkey",
          "tableFrom": "oauth_account",
          "tableTo": "auth_user",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "oauth_account_pkey": {
          "name": "oauth_account_pkey",
          "columns": [
            "provider_id",
            "provider_user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {}
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "views": {
    "public.geography_columns": {
      "name": "geography_columns",
      "schema": "public",
      "columns": {
        "f_table_catalog": {
          "name": "f_table_catalog",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_schema": {
          "name": "f_table_schema",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_name": {
          "name": "f_table_name",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_geography_column": {
          "name": "f_geography_column",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "coord_dimension": {
          "name": "coord_dimension",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT current_database() AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geography_column, postgis_typmod_dims(a.atttypmod) AS coord_dimension, postgis_typmod_srid(a.atttypmod) AS srid, postgis_typmod_type(a.atttypmod) AS type FROM pg_class c, pg_attribute a, pg_type t, pg_namespace n WHERE t.typname = 'geography'::name AND a.attisdropped = false AND a.atttypid = t.oid AND a.attrelid = c.oid AND c.relnamespace = n.oid AND (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text)",
      "materialized": false
    },
    "public.geometry_columns": {
      "name": "geometry_columns",
      "schema": "public",
      "columns": {
        "f_table_catalog": {
          "name": "f_table_catalog",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_schema": {
          "name": "f_table_schema",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_table_name": {
          "name": "f_table_name",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "f_geometry_column": {
          "name": "f_geometry_column",
          "type": "name",
          "primaryKey": false,
          "notNull": false
        },
        "coord_dimension": {
          "name": "coord_dimension",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "srid": {
          "name": "srid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar(30)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT current_database()::character varying(256) AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geometry_column, COALESCE(postgis_typmod_dims(a.atttypmod), sn.ndims, 2) AS coord_dimension, COALESCE(NULLIF(postgis_typmod_srid(a.atttypmod), 0), sr.srid, 0) AS srid, replace(replace(COALESCE(NULLIF(upper(postgis_typmod_type(a.atttypmod)), 'GEOMETRY'::text), st.type, 'GEOMETRY'::text), 'ZM'::text, ''::text), 'Z'::text, ''::text)::character varying(30) AS type FROM pg_class c JOIN pg_attribute a ON a.attrelid = c.oid AND NOT a.attisdropped JOIN pg_namespace n ON c.relnamespace = n.oid JOIN pg_type t ON a.atttypid = t.oid LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(split_part(s.consrc, ''''::text, 2), ')'::text, ''::text) AS type FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%geometrytype(% = %'::text) st ON st.connamespace = n.oid AND st.conrelid = c.oid AND (a.attnum = ANY (st.conkey)) LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text)::integer AS ndims FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%ndims(% = %'::text) sn ON sn.connamespace = n.oid AND sn.conrelid = c.oid AND (a.attnum = ANY (sn.conkey)) LEFT JOIN ( SELECT s.connamespace, s.conrelid, s.conkey, replace(replace(split_part(s.consrc, ' = '::text, 2), ')'::text, ''::text), '('::text, ''::text)::integer AS srid FROM ( SELECT pg_constraint.connamespace, pg_constraint.conrelid, pg_constraint.conkey, pg_get_constraintdef(pg_constraint.oid) AS consrc FROM pg_constraint) s WHERE s.consrc ~~* '%srid(% = %'::text) sr ON sr.connamespace = n.oid AND sr.conrelid = c.oid AND (a.attnum = ANY (sr.conkey)) WHERE (c.relkind = ANY (ARRAY['r'::\"char\", 'v'::\"char\", 'm'::\"char\", 'f'::\"char\", 'p'::\"char\"])) AND NOT c.relname = 'raster_columns'::name AND t.typname = 'geometry'::name AND NOT pg_is_other_temp_schema(c.relnamespace) AND has_table_privilege(c.oid, 'SELECT'::text)",
      "materialized": false
    },
    "public.pg_stat_monitor": {
      "name": "pg_stat_monitor",
      "schema": "public",
      "columns": {
        "bucket": {
          "name": "bucket",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "bucket_start_time": {
          "name": "bucket_start_time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "userid": {
          "name": "userid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "dbid": {
          "name": "dbid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "datname": {
          "name": "datname",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_ip": {
          "name": "client_ip",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "pgsm_query_id": {
          "name": "pgsm_query_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "queryid": {
          "name": "queryid",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "toplevel": {
          "name": "toplevel",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "top_queryid": {
          "name": "top_queryid",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "query": {
          "name": "query",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "comments": {
          "name": "comments",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "planid": {
          "name": "planid",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "query_plan": {
          "name": "query_plan",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "top_query": {
          "name": "top_query",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "application_name": {
          "name": "application_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "relations": {
          "name": "relations",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "cmd_type": {
          "name": "cmd_type",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "cmd_type_text": {
          "name": "cmd_type_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "elevel": {
          "name": "elevel",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "sqlcode": {
          "name": "sqlcode",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "calls": {
          "name": "calls",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_exec_time": {
          "name": "total_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_exec_time": {
          "name": "min_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_exec_time": {
          "name": "max_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_exec_time": {
          "name": "mean_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_exec_time": {
          "name": "stddev_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "rows": {
          "name": "rows",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_hit": {
          "name": "shared_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_read": {
          "name": "shared_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_dirtied": {
          "name": "shared_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_written": {
          "name": "shared_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_hit": {
          "name": "local_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_read": {
          "name": "local_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_dirtied": {
          "name": "local_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_written": {
          "name": "local_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_read": {
          "name": "temp_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_written": {
          "name": "temp_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "blk_read_time": {
          "name": "blk_read_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "blk_write_time": {
          "name": "blk_write_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blk_read_time": {
          "name": "temp_blk_read_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blk_write_time": {
          "name": "temp_blk_write_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "resp_calls": {
          "name": "resp_calls",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "cpu_user_time": {
          "name": "cpu_user_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "cpu_sys_time": {
          "name": "cpu_sys_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "wal_records": {
          "name": "wal_records",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_fpi": {
          "name": "wal_fpi",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_bytes": {
          "name": "wal_bytes",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "bucket_done": {
          "name": "bucket_done",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "plans": {
          "name": "plans",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_plan_time": {
          "name": "total_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_plan_time": {
          "name": "min_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_plan_time": {
          "name": "max_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_plan_time": {
          "name": "mean_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_plan_time": {
          "name": "stddev_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_functions": {
          "name": "jit_functions",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_generation_time": {
          "name": "jit_generation_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_inlining_count": {
          "name": "jit_inlining_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_inlining_time": {
          "name": "jit_inlining_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_optimization_count": {
          "name": "jit_optimization_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_optimization_time": {
          "name": "jit_optimization_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_emission_count": {
          "name": "jit_emission_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_emission_time": {
          "name": "jit_emission_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT bucket, bucket_start_time, userid, username, dbid, datname, '0.0.0.0'::inet + client_ip AS client_ip, pgsm_query_id, queryid, toplevel, top_queryid, query, comments, planid, query_plan, top_query, application_name, string_to_array(relations, ','::text) AS relations, cmd_type, get_cmd_type(cmd_type) AS cmd_type_text, elevel, sqlcode, message, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, shared_blk_read_time AS blk_read_time, shared_blk_write_time AS blk_write_time, temp_blk_read_time, temp_blk_write_time, string_to_array(resp_calls, ','::text) AS resp_calls, cpu_user_time, cpu_sys_time, wal_records, wal_fpi, wal_bytes, bucket_done, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time FROM pg_stat_monitor_internal(true) pg_stat_monitor_internal(bucket, userid, username, dbid, datname, client_ip, queryid, planid, query, query_plan, pgsm_query_id, top_queryid, top_query, application_name, relations, cmd_type, elevel, sqlcode, message, bucket_start_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, shared_blk_read_time, shared_blk_write_time, local_blk_read_time, local_blk_write_time, temp_blk_read_time, temp_blk_write_time, resp_calls, cpu_user_time, cpu_sys_time, wal_records, wal_fpi, wal_bytes, comments, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time, jit_deform_count, jit_deform_time, stats_since, minmax_stats_since, toplevel, bucket_done) ORDER BY bucket_start_time",
      "materialized": false
    },
    "public.pg_stat_statements_info": {
      "name": "pg_stat_statements_info",
      "schema": "public",
      "columns": {
        "dealloc": {
          "name": "dealloc",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "stats_reset": {
          "name": "stats_reset",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT dealloc, stats_reset FROM pg_stat_statements_info() pg_stat_statements_info(dealloc, stats_reset)",
      "materialized": false
    },
    "public.pg_stat_statements": {
      "name": "pg_stat_statements",
      "schema": "public",
      "columns": {
        "userid": {
          "name": "userid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "dbid": {
          "name": "dbid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "toplevel": {
          "name": "toplevel",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "queryid": {
          "name": "queryid",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "query": {
          "name": "query",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plans": {
          "name": "plans",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_plan_time": {
          "name": "total_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_plan_time": {
          "name": "min_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_plan_time": {
          "name": "max_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_plan_time": {
          "name": "mean_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_plan_time": {
          "name": "stddev_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "calls": {
          "name": "calls",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_exec_time": {
          "name": "total_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_exec_time": {
          "name": "min_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_exec_time": {
          "name": "max_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_exec_time": {
          "name": "mean_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_exec_time": {
          "name": "stddev_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "rows": {
          "name": "rows",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_hit": {
          "name": "shared_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_read": {
          "name": "shared_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_dirtied": {
          "name": "shared_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_written": {
          "name": "shared_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_hit": {
          "name": "local_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_read": {
          "name": "local_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_dirtied": {
          "name": "local_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_written": {
          "name": "local_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_read": {
          "name": "temp_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_written": {
          "name": "temp_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "blk_read_time": {
          "name": "blk_read_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "blk_write_time": {
          "name": "blk_write_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blk_read_time": {
          "name": "temp_blk_read_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blk_write_time": {
          "name": "temp_blk_write_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "wal_records": {
          "name": "wal_records",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_fpi": {
          "name": "wal_fpi",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_bytes": {
          "name": "wal_bytes",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "jit_functions": {
          "name": "jit_functions",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_generation_time": {
          "name": "jit_generation_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_inlining_count": {
          "name": "jit_inlining_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_inlining_time": {
          "name": "jit_inlining_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_optimization_count": {
          "name": "jit_optimization_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_optimization_time": {
          "name": "jit_optimization_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_emission_count": {
          "name": "jit_emission_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_emission_time": {
          "name": "jit_emission_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT userid, dbid, toplevel, queryid, query, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, blk_read_time, blk_write_time, temp_blk_read_time, temp_blk_write_time, wal_records, wal_fpi, wal_bytes, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time FROM pg_stat_statements(true) pg_stat_statements(userid, dbid, toplevel, queryid, query, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, blk_read_time, blk_write_time, temp_blk_read_time, temp_blk_write_time, wal_records, wal_fpi, wal_bytes, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time)",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "pg_stat_monitor": {
        "columns": {
          "relations": {
            "isArray": true,
            "dimensions": 0,
            "rawType": "text"
          },
          "resp_calls": {
            "isArray": true,
            "dimensions": 0,
            "rawType": "text"
          }
        }
      }
    }
  }
}